#!/usr/bin/env node
let app   = require('../app');
let debug = require('debug')('tictactoe:server');

let port = normalizePort(process.env.PORT || '3000');
app.app.set('port', port);

app.server.listen(port, '0.0.0.0', () => console.log('Server started at: http://localhost:' + port));
app.server.on('error', onError);
app.server.on('listening', onListening);

function normalizePort(val) {
    let port = parseInt(val, 10);
    if (isNaN(port))
        return val;
    if (port >= 0)
        return port;
    return false;
}

function onError(error) {
    if (error.syscall !== 'listen')
        throw error;
    let bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    let addr = app.server.address();
    let bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
    debug('Listening on ' + bind);
}
